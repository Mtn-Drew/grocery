{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/SortedGroceryListEntry.js","components/Loader.js","components/GroceryList.js","components/HistoryListItem.js","components/HistoryList.js","components/SearchBar.js","components/MakeGroceryList.js","components/StoreListEntry.js","components/MakeStoreList.js","components/StoreList.js","components/SubmitButtons.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","state","action","type","tempArrDelete","groceryItem","filter","item","_id","payload","tempArrChecked","map","checked","groceryLoading","store","storeLoading","console","log","storeArrDelete","historyItem","historyLoading","historyArrDelete","transactions","transaction","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","deleteItemFromList","addItemToList","toggleChecked","getGroceryItems","getStores","deleteStore","addStore","getHistoryItems","addItemToHistory","deleteItemFromHistory","SortedListEntry","props","useContext","name","list","key","style","textDecoration","onClick","itemName","aisle","Loader","GroceryList","useState","displayedList","setDisplayedList","showList","setShowList","useEffect","sortedGroceries","sort","b","defaultStore","toUpperCase","storeName","length","newListItem","SortedGroceryListEntry","prev","HistoryListItem","showDescription","setShowDescription","description","hiid","HistoryList","hi","groceryItemName","groceryItemAisle","groceryItemDescription","date","lastPurchased","SearchBar","query","setQuery","displayResults","setDisplayResults","addToList","event","preventDefault","newItem","placeholder","onChange","e","matches","regex","RegExp","target","match","noDuplicateMatches","sortedMatches","i","push","x","makeDisplay","onSubmit","htmlFor","readOnly","MakeList","newItemName","setNewItemName","newItemDescription","setNewItemDescription","newItemAisle","setNewItemAisle","newItemStore","setNewItemStore","newItemLastPurchased","setNewItemLastPurchased","showForm","setShowForm","toLowerCase","testArr","s","required","StoreListEntry","sid","MakeStoreList","newStoreName","setNewStoreName","newStoreDescription","setNewStoreDescription","newStore","StoreList","showMakeStoreList","setShowMakeStoreList","SubmitButtons","histItem","forEach","App","MakeGroceryList","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fb80dea0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// in menu, options to- edit default stores, add stores, edit item defaults, look at frequencies\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div>menu</div>\r\n      <h1>Smart Grocery List</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_ITEM_FROM_LIST':\r\n      const tempArrDelete = state.groceryItem.filter(\r\n        (item) => item._id !== action.payload\r\n      )\r\n      return {\r\n        ...state,\r\n        groceryItem: tempArrDelete,\r\n      }\r\n\r\n    case 'ADD_ITEM_TO_LIST':\r\n      return {\r\n        ...state,\r\n        groceryItem: [...state.groceryItem, action.payload],\r\n      }\r\n\r\n    case 'TOGGLE_CHECKED':\r\n      const tempArrChecked = state.groceryItem.map((item) => {\r\n        if (item._id === action.payload._id) {\r\n          item.checked = !item.checked\r\n          return item\r\n        } else {\r\n          return item\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        groceryItem: tempArrChecked,\r\n      }\r\n\r\n    case 'GET_GROCERIES':\r\n      return {\r\n        ...state,\r\n        groceryLoading: false,\r\n        groceryItem: action.payload,\r\n      }\r\n\r\n    case 'GET_STORES':\r\n      return {\r\n        ...state,\r\n        store: action.payload,\r\n        storeLoading: false,\r\n      }\r\n\r\n    case 'ADD_STORE':\r\n      console.log('in add store -', action.payload)\r\n      return {\r\n        ...state,\r\n        store: [...state.store, action.payload],\r\n      }\r\n\r\n    case 'DELETE_STORE':\r\n      const storeArrDelete = state.store.filter(\r\n        (item) => item._id !== action.payload\r\n      )\r\n      return {\r\n        ...state,\r\n        store: storeArrDelete,\r\n      }\r\n\r\n    case 'GET_HISTORY':\r\n      return {\r\n        ...state,\r\n        historyItem: action.payload,\r\n        historyLoading: false,\r\n      }\r\n\r\n    case 'DELETE_HISTORY_ITEM_FROM_LIST':\r\n      const historyArrDelete = state.historyItem.filter(\r\n        (item) => item._id !== action.payload\r\n      )\r\n      return {\r\n        ...state,\r\n        historyItem: historyArrDelete,\r\n      }\r\n\r\n    case 'ADD_ITEM_TO_HISTORY':\r\n      return {\r\n        ...state,\r\n        historyItem: [...state.historyItem, action.payload],\r\n      }\r\n\r\n    //transactions\r\n    case 'GET_TRANSACTIONS':\r\n      return {\r\n        ...state,\r\n        groceryLoading: false,\r\n        transactions: action.payload,\r\n      }\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== action.payload\r\n        ),\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      }\r\n    case 'TRANSACTION_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\nimport axios from 'axios'\r\n\r\n//alt store is set if user picks store other than default\r\n\r\n//Init state\r\nconst initialState = {\r\n  store: [],\r\n  groceryItem: [],\r\n  historyItem: [],\r\n  // transactions: [],\r\n  error: null,\r\n  groceryLoading: true,\r\n  storeLoading: true,\r\n  historyLoading: true,\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n  // Actions\r\n\r\n  // async function getTransactions() {\r\n  //   try {\r\n  //     const res = await axios.get('/api/v1/transactions')\r\n\r\n  //     dispatch({\r\n  //       type: 'GET_TRANSACTIONS',\r\n  //       payload: res.data.data,\r\n  //     })\r\n  //   } catch (error) {\r\n  //     dispatch({\r\n  //       type: 'TRANSACTION_ERROR',\r\n  //       payload: error.response.data.error,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  async function getGroceryItems() {\r\n    try {\r\n      const res = await axios.get('/api/v1/groceryItems')\r\n\r\n      dispatch({\r\n        type: 'GET_GROCERIES',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function deleteItemFromList(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/groceryItems/${id}`)\r\n\r\n      dispatch({\r\n        type: 'DELETE_ITEM_FROM_LIST',\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function addItemToList(item) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/groceryItems', item, config)\r\n\r\n      dispatch({\r\n        type: 'ADD_ITEM_TO_LIST',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  function toggleChecked(item) {\r\n    dispatch({\r\n      type: 'TOGGLE_CHECKED',\r\n      payload: item,\r\n    })\r\n  }\r\n\r\n  async function getStores() {\r\n    try {\r\n      const res = await axios.get('/api/v1/groceryStores')\r\n\r\n      dispatch({\r\n        type: 'GET_STORES',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function deleteStore(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/groceryStores/${id}`)\r\n\r\n      dispatch({\r\n        type: 'DELETE_STORE',\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function addStore(item) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/groceryStores', item, config)\r\n\r\n      dispatch({\r\n        type: 'ADD_STORE',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function getHistoryItems() {\r\n    try {\r\n      const res = await axios.get('/api/v1/historyItems')\r\n\r\n      dispatch({\r\n        type: 'GET_HISTORY',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function deleteItemFromHistory(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/historyItems/${id}`)\r\n\r\n      dispatch({\r\n        type: 'DELETE_HISTORY_ITEM_FROM_LIST',\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function addItemToHistory(item) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/historyItems', item, config)\r\n\r\n      dispatch({\r\n        type: 'ADD_ITEM_TO_HISTORY',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        store: state.store,\r\n        groceryItem: state.groceryItem,\r\n        deleteItemFromList,\r\n        addItemToList,\r\n        toggleChecked,\r\n        getGroceryItems,\r\n        getStores,\r\n        deleteStore,\r\n        addStore,\r\n        historyItem: state.historyItem,\r\n        getHistoryItems,\r\n        addItemToHistory,\r\n        deleteItemFromHistory,\r\n        // transactions: state.transactions,\r\n        error: state.error,\r\n        groceryLoading: state.groceryLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nfunction SortedListEntry(props) {\r\n  const { toggleChecked, deleteItemFromList } = useContext(GlobalContext)\r\n\r\n  return (\r\n    <div>\r\n      <h4>{props.name}</h4>\r\n      <ul className=\"list\">\r\n        <SlideDown>\r\n          {props.list.map((item) => (\r\n            <li\r\n              key={item._id}\r\n              style={{ textDecoration: item.checked ? 'line-through' : '' }}\r\n            >\r\n              <button\r\n                className=\"delete-btn\"\r\n                style={{ textDecoration: '' }}\r\n                onClick={() => deleteItemFromList(item._id)}\r\n              >\r\n                X\r\n              </button>\r\n              {item.itemName} <span> {item.aisle} </span>\r\n              <button className=\"check-btn\" onClick={() => toggleChecked(item)}>\r\n                ✓\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </SlideDown>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortedListEntry\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n  return <div className=\"loader center spinner\"></div>\r\n}\r\n\r\nexport default Loader\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport SortedGroceryListEntry from './SortedGroceryListEntry'\r\nimport Loader from './Loader'\r\n\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nfunction GroceryList() {\r\n  const {\r\n    store,\r\n    getStores,\r\n    groceryItem,\r\n    getGroceryItems,\r\n    groceryLoading,\r\n    getHistoryItems,\r\n  } = useContext(GlobalContext)\r\n\r\n  const [displayedList, setDisplayedList] = useState([])\r\n  const [showList, setShowList] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getGroceryItems()\r\n    getStores()\r\n    getHistoryItems()\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const sortedGroceries = groceryItem.sort((a, b) =>\r\n      a.aisle > b.aisle ? 1 : -1\r\n    )\r\n\r\n    const listByStore = (store) => {\r\n      const list = sortedGroceries.filter(\r\n        (item) =>\r\n          item.defaultStore.toUpperCase() === store.storeName.toUpperCase()\r\n      )\r\n\r\n      if (list.length !== 0) {\r\n        let newListItem = (\r\n          <SortedGroceryListEntry\r\n            name={store.storeName}\r\n            list={list}\r\n            key={store._id}\r\n          />\r\n        )\r\n        setDisplayedList((prev) => [...prev, newListItem])\r\n      }\r\n    }\r\n\r\n    setDisplayedList([])\r\n    store.filter(listByStore)\r\n  }, [groceryItem, store])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>\r\n        grocery list\r\n        <span onClick={() => setShowList(!showList)}>\r\n          {showList ? '🔼' : '🔽'}\r\n        </span>\r\n      </h3>\r\n      <SlideDown>\r\n        {showList ? groceryLoading ? <Loader /> : displayedList : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroceryList\r\n","import React, { useContext, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nfunction HistoryListItem(props) {\r\n  const { deleteItemFromHistory } = useContext(GlobalContext)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n  const description = (\r\n    <div>\r\n      <div>{props.store}</div>\r\n      <div>{props.aisle}</div>\r\n      <div>{props.description}</div>\r\n    </div>\r\n  )\r\n  return (\r\n    <div>\r\n      <div\r\n        onClick={() => {\r\n          setShowDescription(!showDescription)\r\n        }}\r\n      >\r\n        <button\r\n          className=\"delete-btn\"\r\n          onClick={() => deleteItemFromHistory(props.hiid)}\r\n        >\r\n          X\r\n        </button>\r\n        {props.name}\r\n        {showDescription ? description : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryListItem\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport HistoryListItem from './HistoryListItem'\r\n\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\n//by date, store or by item toggle?\r\n\r\nfunction HistoryList() {\r\n  const [showList, setShowList] = useState(false)\r\n  const [displayedList, setDisplayedList] = useState('')\r\n  const { historyItem } = useContext(GlobalContext)\r\n\r\n  // useEffect(() => {\r\n  //   getHistoryItems()\r\n  //   console.log('historyItem----', historyItem)\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    setDisplayedList([])\r\n\r\n    if (historyItem) {\r\n      historyItem.map((hi) => {\r\n        const newListItem = (\r\n          <li key={hi._id}>\r\n            <HistoryListItem\r\n              hiid={hi._id}\r\n              name={hi.groceryItemName}\r\n              store={hi.storeName}\r\n              aisle={hi.groceryItemAisle}\r\n              description={hi.groceryItemDescription}\r\n              date={hi.lastPurchased}\r\n            />\r\n          </li>\r\n        )\r\n        setDisplayedList((prev) => [...prev, newListItem])\r\n        return null\r\n      })\r\n    }\r\n  }, [historyItem])\r\n\r\n  // useEffect(() => {\r\n  //   historyItem.forEach((hi) => {\r\n  //     const newListItem = (\r\n  //       <HistoryListItem\r\n  //         name={hi.groceryItemName}\r\n  //         store={hi.storeName}\r\n  //         desc={hi.groceryItemDescription}\r\n  //         aisle={hi.groceryItemAisle}\r\n  //         date={hi.lastPurchased}\r\n  //         key={hi._id}\r\n  //       />\r\n  //     )\r\n  //     setDisplayedList((prev) => [...prev, newListItem])\r\n  //   })\r\n  // }, [displayedList])\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        history list\r\n        <span onClick={() => setShowList(!showList)}>\r\n          {showList ? '🔼' : '🔽'}\r\n        </span>\r\n      </h3>\r\n      <SlideDown>\r\n        {showList ? (\r\n          <ul className=\"list\">\r\n            <div>{displayedList}</div>\r\n          </ul>\r\n        ) : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryList\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nfunction SearchBar() {\r\n  const { historyItem, addItemToList } = useContext(GlobalContext)\r\n  const [query, setQuery] = useState('')\r\n\r\n  const [displayResults, setDisplayResults] = useState([])\r\n\r\n  const addToList = (item) => {\r\n    return (event) => {\r\n      event.preventDefault()\r\n      const newItem = {\r\n        itemName: item.groceryItemName,\r\n        description: item.groceryItemDescription,\r\n        aisle: item.groceryItemAisle,\r\n        defaultStore: item.storeName,\r\n      }\r\n      addItemToList(newItem)\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let matches = historyItem.filter((item) => {\r\n      const regex = new RegExp(`^${e.target.value}`, 'gi')\r\n      return item.groceryItemName.match(regex)\r\n    })\r\n    if (e.target.value.length < 2) {\r\n      matches = []\r\n      setDisplayResults([])\r\n    } else {\r\n      let noDuplicateMatches = []\r\n      if (matches.length > 1) {\r\n        const sortedMatches = matches.sort((a, b) =>\r\n          a.groceryItemName > b.groceryItemName ? 1 : -1\r\n        )\r\n        console.log('sorted matches ', sortedMatches)\r\n        noDuplicateMatches = [matches[0]]\r\n        for (let i = 1; i < matches.length; i++) {\r\n          if (\r\n            sortedMatches[i].groceryItemName !==\r\n            sortedMatches[i - 1].groceryItemName\r\n          ) {\r\n            noDuplicateMatches.push(sortedMatches[i])\r\n          }\r\n        }\r\n        console.log('No Dupes-- ', noDuplicateMatches)\r\n      } else {\r\n        //if fewer than 2 matches, just clone matches into noDuplicateMatches\r\n        noDuplicateMatches = matches.map((x) => x)\r\n      }\r\n\r\n      const makeDisplay = noDuplicateMatches.map((item) => {\r\n        return (\r\n          <SlideDown key={item._id}>\r\n            <form onSubmit={addToList(item)}>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Add New Item</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"grocery item name\"\r\n                  value={item.groceryItemName}\r\n                  name=\"groceryName\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"description\"\r\n                  value={item.groceryItemDescription}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"aisle\"\r\n                  value={item.groceryItemAisle}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"store\"\r\n                  value={item.storeName}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"date last purchased\"\r\n                  value={item.lastPurchased}\r\n                  readOnly\r\n                />\r\n              </div>\r\n\r\n              <button className=\"btn\">Add To Grocery List</button>\r\n            </form>\r\n          </SlideDown>\r\n        )\r\n      })\r\n      setDisplayResults(makeDisplay)\r\n    }\r\n\r\n    console.log('matches-->', matches)\r\n    setQuery(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />{' '}\r\n      </form>\r\n      {displayResults}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport SearchBar from './SearchBar'\r\n\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\n// under input, display the closest search result to what has been typed so far.  When you click on search result,  you select that item.  You can then click to add to list, or click edit\r\n//when found in search, it lists default values (aisle, store, frequency)\r\n//when you click edit, you can change values for aisle, store, frequency\r\n\r\nfunction MakeList() {\r\n  const { addItemToList, store } = useContext(GlobalContext)\r\n  const [newItemName, setNewItemName] = useState('')\r\n  const [newItemDescription, setNewItemDescription] = useState('')\r\n  const [newItemAisle, setNewItemAisle] = useState('')\r\n  const [newItemStore, setNewItemStore] = useState('')\r\n  const [newItemLastPurchased, setNewItemLastPurchased] = useState('')\r\n  const [showForm, setShowForm] = useState(true)\r\n\r\n  const resetForm = () => {\r\n    setNewItemName('')\r\n    setNewItemDescription('')\r\n    setNewItemAisle('')\r\n    setNewItemStore('')\r\n    setNewItemLastPurchased('')\r\n  }\r\n\r\n  const addToList = (e) => {\r\n    e.preventDefault()\r\n    console.log('in addToList ')\r\n    const newItem = {\r\n      itemName: newItemName.toLowerCase(),\r\n      description: newItemDescription,\r\n      aisle: newItemAisle.toLowerCase(),\r\n      defaultStore: newItemStore.toUpperCase(),\r\n    }\r\n\r\n    //check newItemStore against store values in context and set to 'any/other' if it doesn't match\r\n    //add option to add store??\r\n    const testArr = store.filter((s) => s.storeName === newItem.defaultStore)\r\n    console.log('testArr ->', testArr)\r\n    console.log('defaultStore->', newItem.defaultStore)\r\n    if (testArr.length === 0) {\r\n      newItem.defaultStore = 'ANY/OTHER'\r\n    }\r\n\r\n    console.log('newItem -> ', newItem)\r\n    addItemToList(newItem)\r\n    resetForm()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Add item to list\r\n        <span onClick={() => setShowForm(!showForm)}>\r\n          {showForm ? '🔼' : '🔽'}\r\n        </span>\r\n      </h3>\r\n      <SlideDown>\r\n        <SearchBar />\r\n        {showForm ? (\r\n          <form onSubmit={addToList}>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"text\">Add New Item</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"grocery item name\"\r\n                value={newItemName}\r\n                onChange={(e) => setNewItemName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"description\"\r\n                value={newItemDescription}\r\n                onChange={(e) => setNewItemDescription(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"aisle\"\r\n                value={newItemAisle}\r\n                onChange={(e) => setNewItemAisle(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"store\"\r\n                value={newItemStore}\r\n                onChange={(e) => setNewItemStore(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"date last purchased\"\r\n                value={newItemLastPurchased}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn\">Add To Grocery List</button>\r\n          </form>\r\n        ) : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MakeList\r\n","import React, { useContext, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nfunction StoreListEntry(props) {\r\n  const { deleteStore } = useContext(GlobalContext)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n\r\n  const description = <div>{props.description}</div>\r\n  // const addStoreForm = <form></form>\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setShowDescription(!showDescription)\r\n      }}\r\n    >\r\n      {/* {console.log('props-', props)} */}\r\n      <button className=\"delete-btn\" onClick={() => deleteStore(props.sid)}>\r\n        X\r\n      </button>\r\n      {props.name}\r\n      {showDescription ? description : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StoreListEntry\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n// under input, display the closest search result to what has been typed so far.  When you click on search result,  you select that item.  You can then click to add to list, or click edit\r\n//when found in search, it lists default values (aisle, store, frequency)\r\n//when you click edit, you can change values for aisle, store, frequency\r\n\r\nfunction MakeStoreList() {\r\n  const { addStore } = useContext(GlobalContext)\r\n  const [newStoreName, setNewStoreName] = useState('')\r\n  const [newStoreDescription, setNewStoreDescription] = useState('')\r\n\r\n  const resetForm = () => {\r\n    setNewStoreName('')\r\n    setNewStoreDescription('')\r\n  }\r\n\r\n  const addToList = (e) => {\r\n    e.preventDefault()\r\n    console.log('in addToList ')\r\n    const newStore = {\r\n      storeName: newStoreName.toUpperCase(),\r\n      description: newStoreDescription,\r\n    }\r\n\r\n    console.log('newStore -> ', newStore)\r\n    addStore(newStore)\r\n    resetForm()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add Store</h3>\r\n      <form onSubmit={addToList}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Search or Add New Store</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"store name\"\r\n            value={newStoreName}\r\n            onChange={(e) => setNewStoreName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"description\"\r\n            value={newStoreDescription}\r\n            onChange={(e) => setNewStoreDescription(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn\">Add To Store List</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MakeStoreList\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport Loader from './Loader'\r\nimport StoreListEntry from './StoreListEntry'\r\nimport MakeStoreList from './MakeStoreList'\r\nimport SlideDown from 'react-slidedown'\r\n\r\nfunction StoreList() {\r\n  const { store, storeLoading } = useContext(GlobalContext)\r\n  const [displayedList, setDisplayedList] = useState([])\r\n  const [showMakeStoreList, setShowMakeStoreList] = useState(false)\r\n  const [showList, setShowList] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setDisplayedList([])\r\n\r\n    store.map((s) => {\r\n      const newListItem = (\r\n        <li key={s._id}>\r\n          <StoreListEntry\r\n            name={s.storeName}\r\n            sid={s._id}\r\n            description={s.description}\r\n          />\r\n        </li>\r\n      )\r\n      setDisplayedList((prev) => [...prev, newListItem])\r\n      return null\r\n    })\r\n  }, [store])\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        store list\r\n        <span onClick={() => setShowList(!showList)}>\r\n          {showList ? '🔼' : '🔽'}\r\n        </span>\r\n        {showList ? (\r\n          <span onClick={() => setShowMakeStoreList(!showMakeStoreList)}>\r\n            {showMakeStoreList ? '➖' : '➕'}\r\n          </span>\r\n        ) : null}\r\n      </h3>\r\n      <SlideDown>\r\n        {showMakeStoreList && showList ? <MakeStoreList /> : null}\r\n        {showList ? (\r\n          <ul className=\"list\">{storeLoading ? <Loader /> : displayedList}</ul>\r\n        ) : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StoreList\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n//submit button stores all checked items in history and removes them from current list\r\n//reset button clears the list\r\n\r\nfunction SubmitButtons() {\r\n  const { groceryItem, addItemToHistory, deleteItemFromList } = useContext(\r\n    GlobalContext\r\n  )\r\n  const handleReset = () => {\r\n    groceryItem.forEach((item) => {\r\n      deleteItemFromList(item._id)\r\n    })\r\n  }\r\n  const handleSubmit = () => {\r\n    const checked = groceryItem.filter((item) => item.checked === true)\r\n\r\n    checked.map((item) => {\r\n      const histItem = {\r\n        groceryItemName: item.itemName,\r\n        storeName: item.defaultStore,\r\n        groceryItemDescription: item.description,\r\n        groceryItemAisle: item.aisle,\r\n      }\r\n      addItemToHistory(histItem)\r\n\r\n      deleteItemFromList(item._id)\r\n      return null\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <button onClick={handleSubmit}>SUBMIT</button>\r\n      <button onClick={handleReset}>RESET</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmitButtons\r\n","import React from 'react'\r\nimport './App.css'\r\n\r\nimport Header from './components/Header'\r\nimport GroceryList from './components/GroceryList'\r\nimport HistoryList from './components/HistoryList'\r\nimport MakeGroceryList from './components/MakeGroceryList'\r\nimport StoreList from './components/StoreList'\r\nimport SubmitButtons from './components/SubmitButtons'\r\n\r\nimport { GlobalProvider } from './context/GlobalState'\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <SubmitButtons />\r\n\r\n      <GroceryList />\r\n      <MakeGroceryList />\r\n      <HistoryList />\r\n      <StoreList />\r\n    </GlobalProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}