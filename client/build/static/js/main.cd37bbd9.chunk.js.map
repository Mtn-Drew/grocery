{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Modal.js","components/SearchBar.js","components/MakeGroceryList.js","components/SortedGroceryListEntry.js","components/Loader.js","components/GroceryList.js","components/StoreListEntry.js","components/MakeStoreList.js","components/StoreList.js","components/SubmitButtons.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","state","action","type","tempArrDelete","groceryItem","filter","item","_id","payload","tempArrUpdate","showModal","tempArrChecked","map","checked","flip","modalName","itemName","modalDescription","description","modalAisle","aisle","modalStore","defaultStore","modalId","err","groceryLoading","store","storeLoading","storeArrDelete","historyItem","historyLoading","historyArrDelete","error","initialState","modal","modalDate","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","put","post","Provider","value","deleteItemFromList","addItemToList","toggleChecked","getGroceryItems","getStores","deleteStore","addStore","getHistoryItems","addItemToHistory","deleteItemFromHistory","toggleModal","setNewModalName","name","updateGroceryItem","Modal","props","useContext","onClick","ReactDOM","createPortal","document","querySelector","SearchBar","useState","query","setQuery","displayResults","setDisplayResults","addToList","event","preventDefault","newItem","groceryItemName","groceryItemDescription","groceryItemAisle","storeName","placeholder","onChange","e","matches","regex","RegExp","target","match","length","noDuplicateMatches","sortedMatches","sort","b","i","push","x","makeDisplay","key","onSubmit","htmlFor","readOnly","lastPurchased","MakeGroceryList","newItemName","setNewItemName","newItemDescription","setNewItemDescription","newItemAisle","setNewItemAisle","newItemStore","setNewItemStore","updateItemId","setUpdateItemId","showForm","setShowForm","itemInput","useRef","useEffect","toLowerCase","toUpperCase","replace","s","current","focus","required","ref","SortedGroceryListEntry","date","list","style","textDecoration","Loader","GroceryList","displayedList","setDisplayedList","showList","setShowList","sortedGroceries","newListItem","prev","StoreListEntry","showDescription","setShowDescription","marginRight","sid","MakeStoreList","newStoreName","setNewStoreName","newStoreDescription","setNewStoreDescription","newStore","StoreList","showMakeStoreList","setShowMakeStoreList","SubmitButtons","histItem","forEach","App","Boolean","window","location","hostname","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cd37bbd9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {MdLocalGroceryStore} from 'react-icons/md'\r\n\r\nfunction Header() {\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h1><MdLocalGroceryStore className={'grocery-icon'}/>Smart Grocery List</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default (state, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'DELETE_ITEM_FROM_LIST':\r\n      const tempArrDelete = state.groceryItem.filter(\r\n        (item) => item._id !== action.payload\r\n      )\r\n      return {\r\n        ...state,\r\n        groceryItem: tempArrDelete,\r\n      }\r\n\r\n    case 'ADD_ITEM_TO_LIST':\r\n      return {\r\n        ...state,\r\n        groceryItem: [...state.groceryItem, action.payload],\r\n      }\r\n\r\n    case 'UPDATE_GROCERY_ITEM':   \r\n      const tempArrUpdate = state.groceryItem.filter(\r\n        (item) => item._id !== action.payload._id\r\n      )\r\n      return {\r\n        ...state,\r\n        groceryItem: [...tempArrUpdate, action.payload],\r\n\r\n        showModal: false,\r\n      }\r\n\r\n    case 'TOGGLE_CHECKED':\r\n      const tempArrChecked = state.groceryItem.map((item) => {\r\n        if (item._id === action.payload._id) {   \r\n          item.checked = !item.checked\r\n          return item         \r\n        } else {\r\n          return item\r\n        }\r\n      })      \r\n      return {       \r\n        ...state,\r\n        groceryItem: tempArrChecked,\r\n      }\r\n\r\n    case 'TOGGLE_MODAL':\r\n      const flip = !state.showModal    \r\n      try {\r\n        return {\r\n          ...state,\r\n          showModal: flip,\r\n          modalName: action.payload.itemName,\r\n          modalDescription: action.payload.description,\r\n          modalAisle: action.payload.aisle,\r\n          modalStore: action.payload.defaultStore,\r\n          modalId: action.payload._id,\r\n          // modalDate: action.payload.lastPurchased\r\n        }\r\n      } catch (err) {\r\n        return {\r\n          ...state,\r\n          showModal: flip,\r\n        }\r\n      }\r\n\r\n    case 'SET_NEW_MODAL_NAME':      \r\n      return {\r\n        modalName: action.payload,\r\n      }\r\n\r\n    case 'GET_GROCERIES':\r\n      return {\r\n        ...state,\r\n        groceryLoading: false,\r\n        groceryItem: action.payload,\r\n      }\r\n\r\n    case 'GET_STORES':\r\n      return {\r\n        ...state,\r\n        store: action.payload,\r\n        storeLoading: false,\r\n      }\r\n\r\n    case 'ADD_STORE':      \r\n      return {\r\n        ...state,\r\n        store: [...state.store, action.payload],\r\n      }\r\n\r\n    case 'DELETE_STORE':\r\n      const storeArrDelete = state.store.filter(\r\n        (item) => item._id !== action.payload\r\n      )\r\n      return {\r\n        ...state,\r\n        store: storeArrDelete,\r\n      }\r\n\r\n    case 'GET_HISTORY':\r\n      return {\r\n        ...state,\r\n        historyItem: action.payload,\r\n        historyLoading: false,\r\n      }\r\n\r\n    case 'DELETE_HISTORY_ITEM_FROM_LIST':\r\n      const historyArrDelete = state.historyItem.filter(\r\n        (item) => item._id !== action.payload\r\n      )\r\n      return {\r\n        ...state,\r\n        historyItem: historyArrDelete,\r\n      }\r\n\r\n    case 'ADD_ITEM_TO_HISTORY':\r\n      return {\r\n        ...state,\r\n        historyItem: [...state.historyItem, action.payload],\r\n      }\r\n\r\n    case 'DATA_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\nimport axios from 'axios'\r\n\r\n//Init state\r\nconst initialState = {\r\n  store: [],\r\n  groceryItem: [],\r\n  historyItem: [],\r\n  error: null,\r\n  groceryLoading: true,\r\n  storeLoading: true,\r\n  historyLoading: true,\r\n  showModal: false,\r\n  modal: '',\r\n  modalName: '',\r\n  modalDescription: '',\r\n  modalAisle: '',\r\n  modalStore: '',\r\n  modalDate: '',\r\n  modalId: '',\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n  // Actions\r\n\r\n  async function getGroceryItems() {\r\n    try {\r\n      const res = await axios.get('/api/v1/groceryItems')\r\n\r\n      dispatch({\r\n        type: 'GET_GROCERIES',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function deleteItemFromList(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/groceryItems/${id}`)\r\n\r\n      dispatch({\r\n        type: 'DELETE_ITEM_FROM_LIST',\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function updateGroceryItem(item) {\r\n  \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const data = {\r\n      itemName: item.itemName,\r\n      description: item.description,\r\n      aisle: item.aisle,\r\n      defaultStore: item.defaultStore,\r\n      _id: item._id,\r\n    }\r\n   \r\n    try {\r\n      await axios.put(`/api/v1/groceryItems/${data._id}`, data, config)\r\n\r\n      dispatch({\r\n        type: 'UPDATE_GROCERY_ITEM',\r\n        payload: item,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function addItemToList(item) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/groceryItems', item, config)\r\n\r\n      dispatch({\r\n        type: 'ADD_ITEM_TO_LIST',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  function toggleChecked(item) {\r\n    \r\n    dispatch({\r\n      type: 'TOGGLE_CHECKED',\r\n      payload: item,\r\n    })\r\n  }\r\n\r\n  function toggleModal(item) {\r\n   \r\n    dispatch({\r\n      type: 'TOGGLE_MODAL',\r\n      payload: item,\r\n    })\r\n  }\r\n\r\n  function setNewModalName(name) {\r\n    dispatch({\r\n      type: 'SET_NEW_MODAL_NAME',\r\n      payload: name,\r\n    })\r\n  }\r\n\r\n  async function getStores() {\r\n    try {\r\n      const res = await axios.get('/api/v1/groceryStores')\r\n\r\n      dispatch({\r\n        type: 'GET_STORES',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function deleteStore(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/groceryStores/${id}`)\r\n\r\n      dispatch({\r\n        type: 'DELETE_STORE',\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function addStore(item) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/groceryStores', item, config)\r\n\r\n      dispatch({\r\n        type: 'ADD_STORE',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function getHistoryItems() {\r\n    try {\r\n      const res = await axios.get('/api/v1/historyItems')\r\n\r\n      dispatch({\r\n        type: 'GET_HISTORY',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function deleteItemFromHistory(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/historyItems/${id}`)\r\n\r\n      dispatch({\r\n        type: 'DELETE_HISTORY_ITEM_FROM_LIST',\r\n        payload: id,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  async function addItemToHistory(item) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/historyItems', item, config)\r\n\r\n      dispatch({\r\n        type: 'ADD_ITEM_TO_HISTORY',\r\n        payload: res.data.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'DATA_ERROR',\r\n        payload: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        store: state.store,\r\n        groceryItem: state.groceryItem,\r\n        deleteItemFromList,\r\n        addItemToList,\r\n        toggleChecked,\r\n        getGroceryItems,\r\n        getStores,\r\n        deleteStore,\r\n        addStore,\r\n        historyItem: state.historyItem,\r\n        getHistoryItems,\r\n        addItemToHistory,\r\n        deleteItemFromHistory,\r\n        toggleModal,\r\n        modal: state.modal,\r\n        error: state.error,\r\n        groceryLoading: state.groceryLoading,\r\n        showModal: state.showModal,\r\n        modalName: state.modalName,\r\n        modalAisle: state.modalAisle,\r\n        modalDescription: state.modalDescription,\r\n        modalStore: state.modalStore,\r\n        modalDate: state.modalDate,\r\n        setNewModalName,\r\n        updateGroceryItem,\r\n        modalId: state.modalId,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Modal = (props) => {\r\n\r\n  const { toggleModal } = useContext(GlobalContext) \r\n  const modal = (\r\n    <div className={'modal-wrapper'}>\r\n      <div className={'modal-backdrop'} onClick={toggleModal}/>\r\n      <div className={'modal-box'}>{props.children}</div>\r\n    </div>\r\n  )\r\n  return ReactDOM.createPortal(modal, document.querySelector('#modal'))\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nfunction SearchBar() {\r\n\r\n  const { historyItem, addItemToList } = useContext(GlobalContext)\r\n  \r\n  const [query, setQuery] = useState('')\r\n  const [displayResults, setDisplayResults] = useState([])\r\n\r\n  const addToList = (item) => {\r\n    return (event) => {\r\n      event.preventDefault()\r\n      \r\n      const newItem = {\r\n        itemName: item.groceryItemName,\r\n        description: item.groceryItemDescription,\r\n        aisle: item.groceryItemAisle,\r\n        defaultStore: item.storeName,\r\n      }\r\n      setQuery('')\r\n      setDisplayResults([])\r\n      addItemToList(newItem)\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let matches = historyItem.filter((item) => {\r\n      const regex = new RegExp(`^${e.target.value}`, 'gi')\r\n      return item.groceryItemName.match(regex)\r\n    })\r\n    if (e.target.value.length < 2) {\r\n      matches = []\r\n      setDisplayResults([])\r\n    } else {\r\n      let noDuplicateMatches = []\r\n      if (matches.length > 1) {\r\n        const sortedMatches = matches.sort((a, b) =>\r\n          a.groceryItemName > b.groceryItemName ? 1 : -1\r\n        )\r\n        noDuplicateMatches = [matches[0]]\r\n        for (let i = 1; i < matches.length; i++) {\r\n          if (\r\n            sortedMatches[i].groceryItemName !==\r\n            sortedMatches[i - 1].groceryItemName\r\n          ) {\r\n            noDuplicateMatches.push(sortedMatches[i])\r\n          }\r\n        }\r\n      } else {\r\n        //if fewer than 2 matches, just clone matches into noDuplicateMatches\r\n        noDuplicateMatches = matches.map((x) => x)\r\n      }\r\n      const makeDisplay = noDuplicateMatches.map((item) => {\r\n        return (\r\n          <SlideDown key={item._id} id=\"add-item-form\">\r\n            <form onSubmit={addToList(item)}>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"add-item-form\">Add New Item</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"grocery item name\"\r\n                  value={item.groceryItemName}\r\n                  name=\"groceryName\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"description\"\r\n                  value={item.groceryItemDescription}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"aisle\"\r\n                  value={item.groceryItemAisle}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"store\"\r\n                  value={item.storeName}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"date last purchased\"\r\n                  value={item.lastPurchased}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <button className=\"btn\">Add To Grocery List</button>\r\n            </form>\r\n          </SlideDown>\r\n        )\r\n      })\r\n      setDisplayResults(makeDisplay)\r\n    }\r\n    setQuery(e.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        /></label>{' '}\r\n      </form>\r\n      {displayResults}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport SearchBar from './SearchBar'\r\n\r\nimport {FcCollapse, FcExpand} from 'react-icons/fc'\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nfunction MakeGroceryList(props) {\r\n  const { addItemToList, store, updateGroceryItem, toggleModal } = useContext(\r\n    GlobalContext\r\n  )\r\n  const [newItemName, setNewItemName] = useState('')\r\n  const [newItemDescription, setNewItemDescription] = useState('')\r\n  const [newItemAisle, setNewItemAisle] = useState('')\r\n  const [newItemStore, setNewItemStore] = useState('')\r\n  const [updateItemId, setUpdateItemId] = useState('')\r\n  const [showForm, setShowForm] = useState(true)\r\n\r\n  const itemInput = useRef(null)\r\n\r\n  const resetForm = () => {\r\n    setNewItemName('')\r\n    setNewItemDescription('')\r\n    setNewItemAisle('')\r\n    setNewItemStore('')\r\n    setUpdateItemId('')\r\n  }\r\n\r\n  const getInitialValues = () => {\r\n    if (props.name) {\r\n      setNewItemName(props.name)\r\n      setUpdateItemId(props._id)\r\n    }\r\n    if (props.description) {\r\n      setNewItemDescription(props.description)\r\n    }\r\n    if (props.store) {\r\n      setNewItemStore(props.store)\r\n    }\r\n    if (props.aisle) {\r\n      setNewItemAisle(props.aisle)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInitialValues()\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const addToList = (e) => {\r\n    e.preventDefault()\r\n\r\n    const newItem = {\r\n      itemName: newItemName.toLowerCase(),\r\n      description: newItemDescription,\r\n      aisle: newItemAisle.toLowerCase(),\r\n      defaultStore: newItemStore.toUpperCase().replace(\"'\", ''),\r\n    }\r\n\r\n    const testArr = store.filter((s) => s.storeName === newItem.defaultStore)\r\n\r\n    if (testArr.length === 0) {\r\n      newItem.defaultStore = 'ANY/OTHER'\r\n    }\r\n\r\n    addItemToList(newItem)\r\n    resetForm()\r\n    itemInput.current.focus()\r\n  }\r\n\r\n  const updateItem = (e) => {\r\n    e.preventDefault()\r\n\r\n    const newItem = {\r\n      itemName: newItemName.toLowerCase(),\r\n      description: newItemDescription,\r\n      aisle: newItemAisle.toLowerCase(),\r\n      defaultStore: newItemStore.toUpperCase().replace(\"'\", ''),\r\n      _id: updateItemId,\r\n    }\r\n\r\n    const testArr = store.filter((s) => s.storeName === newItem.defaultStore)\r\n\r\n    if (testArr.length === 0) {\r\n      newItem.defaultStore = 'ANY/OTHER'\r\n    }\r\n\r\n    updateGroceryItem(newItem)\r\n    toggleModal()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.name ? null : (\r\n        <>\r\n          <h2>\r\n            Add item to list\r\n            <span onClick={() => setShowForm(!showForm)}>\r\n              {showForm ? <FcExpand className={'up-down-icon'}/> : <FcCollapse className={'up-down-icon'}/>}\r\n            </span>\r\n          </h2>\r\n          <SearchBar />\r\n        </>\r\n      )}\r\n      <SlideDown>\r\n        {showForm ? (\r\n          <form onSubmit={props.name ? updateItem : addToList}>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"text\">{props.name ? '' : 'Add New Item'}</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"grocery item name\"\r\n                value={newItemName}\r\n                onChange={(e) => setNewItemName(e.target.value)}\r\n                required\r\n                ref={itemInput}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"description\"\r\n                value={newItemDescription}\r\n                onChange={(e) => setNewItemDescription(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"aisle\"\r\n                value={newItemAisle}\r\n                onChange={(e) => setNewItemAisle(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"store\"\r\n                value={newItemStore}\r\n                onChange={(e) => setNewItemStore(e.target.value)}\r\n              />\r\n            </div>\r\n            <button className=\"btn\">\r\n              {props.name ? 'Update Item' : 'Add To Grocery List'}\r\n            </button>\r\n          </form>\r\n        ) : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MakeGroceryList\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport { FiCheckSquare} from 'react-icons/fi'\r\nimport {RiDeleteBin2Line} from 'react-icons/ri'\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nimport Modal from './Modal'\r\nimport MakeGroceryList from './MakeGroceryList'\r\n\r\nfunction SortedGroceryListEntry(props) {\r\n\r\n  const {\r\n    toggleChecked,\r\n    deleteItemFromList,\r\n    showModal,\r\n    toggleModal,\r\n    modalName,\r\n    modalAisle,\r\n    modalDate,\r\n    modalDescription,\r\n    modalStore,\r\n    modalId,\r\n  } = useContext(GlobalContext)\r\n\r\n  // const [newItemName, setNewItemName] = useState('')\r\n  // useEffect(() => {\r\n  //   setNewItemName(`${modalName}`)\r\n  //   console.log('this prevents requiring double click on checked after modal ', newItemName)\r\n  // }, [modalName, newItemName])\r\n\r\n  return (\r\n    <div>\r\n      {showModal ? (\r\n        <Modal>\r\n          <MakeGroceryList\r\n            name={modalName}\r\n            description={modalDescription}\r\n            aisle={modalAisle}\r\n            store={modalStore}\r\n            _id={modalId}\r\n            date={modalDate}\r\n          />\r\n          <button onClick={toggleModal} className={'myButton'}>Cancel</button>\r\n        </Modal>\r\n      ) : null}\r\n      <h3>{props.name}</h3>\r\n      <ul className=\"list\">\r\n        <SlideDown>\r\n          {props.list.map((item) => (\r\n            <li\r\n              key={item._id}\r\n              style={{ textDecoration: item.checked ? 'line-through' : '' }}\r\n              className={'sorted-grocery-list-entry'}\r\n            >\r\n              <button\r\n                className=\"delete-btn\"\r\n                style={{ textDecoration: '' }}\r\n                onClick={() => deleteItemFromList(item._id)}\r\n              >\r\n                <RiDeleteBin2Line className={'check-delete-icon'}/>\r\n              </button>\r\n              <span onClick={() => toggleModal(item)}>{item.itemName}</span>{' '}\r\n              <span onClick={() => toggleModal(item)}> {item.aisle} </span>\r\n              <button className=\"check-btn\" onClick={() => toggleChecked(item)}>\r\n                <FiCheckSquare/>\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </SlideDown>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortedGroceryListEntry\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n\r\n  return <div className=\"loader center spinner\"></div>\r\n}\r\n\r\nexport default Loader\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport SortedGroceryListEntry from './SortedGroceryListEntry'\r\nimport Loader from './Loader'\r\n\r\nimport {FcCollapse, FcExpand} from 'react-icons/fc'\r\nimport { SlideDown } from 'react-slidedown'\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nfunction GroceryList() {\r\n  const {\r\n    store,\r\n    getStores,\r\n    groceryItem,\r\n    getGroceryItems,\r\n    groceryLoading,\r\n    getHistoryItems,\r\n  } = useContext(GlobalContext)\r\n\r\n  const [displayedList, setDisplayedList] = useState([])\r\n  const [showList, setShowList] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getGroceryItems()\r\n    getStores()\r\n    getHistoryItems()\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    function sortByAisleThenName(a, b) {\r\n      if (a.aisle < b.aisle) return -1\r\n      if (a.aisle > b.aisle) return 1\r\n      if (a.itemName < b.itemName) return -1\r\n      if (a.itemName > b.itemName) return 1\r\n      return 0\r\n    }\r\n    const sortedGroceries = groceryItem.sort(sortByAisleThenName)\r\n    const listByStore = (store) => {\r\n      const list = sortedGroceries.filter(\r\n        (item) =>\r\n          item.defaultStore.toUpperCase() === store.storeName.toUpperCase()\r\n      )\r\n      if (list.length !== 0) {\r\n        let newListItem = (\r\n          <SortedGroceryListEntry\r\n            name={store.storeName}\r\n            list={list}\r\n            key={store._id}\r\n          />\r\n        )\r\n        setDisplayedList((prev) => [...prev, newListItem])\r\n      }\r\n    }\r\n    setDisplayedList([])\r\n    store.filter(listByStore)\r\n  }, [groceryItem, store])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>\r\n        grocery list\r\n        <span onClick={() => setShowList(!showList)}>\r\n          {showList ? <FcExpand className={'up-down-icon'}/> : <FcCollapse className={'up-down-icon'}/>}\r\n        </span>\r\n      </h2>\r\n      <SlideDown>\r\n        {showList ? groceryLoading ? <Loader /> : displayedList : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroceryList\r\n","import React, { useContext, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport {RiDeleteBin6Line} from 'react-icons/ri'\r\n\r\nfunction StoreListEntry(props) {\r\n\r\n  const { deleteStore } = useContext(GlobalContext)\r\n  const [showDescription, setShowDescription] = useState(false)\r\n\r\n  const description = <div>{props.description}</div>\r\n \r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setShowDescription(!showDescription)\r\n      }}\r\n    >\r\n      <button className=\"delete-btn\" style={{marginRight: 20}} onClick={() => deleteStore(props.sid)}>\r\n      <RiDeleteBin6Line />\r\n      </button>\r\n      {props.name}\r\n      {showDescription ? description : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StoreListEntry\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nfunction MakeStoreList() {\r\n\r\n  const { addStore } = useContext(GlobalContext)\r\n  const [newStoreName, setNewStoreName] = useState('')\r\n  const [newStoreDescription, setNewStoreDescription] = useState('')\r\n\r\n  const resetForm = () => {\r\n    setNewStoreName('')\r\n    setNewStoreDescription('')\r\n  }\r\n\r\n  const addToList = (e) => {\r\n    e.preventDefault()\r\n    const newStore = {\r\n      storeName: newStoreName.toUpperCase(),\r\n      description: newStoreDescription,\r\n    }\r\n    addStore(newStore)\r\n    resetForm()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Store</h2>\r\n      <form onSubmit={addToList}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Search or Add New Store</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"store name\"\r\n            value={newStoreName}\r\n            onChange={(e) => setNewStoreName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"description\"\r\n            value={newStoreDescription}\r\n            onChange={(e) => setNewStoreDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add To Store List</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MakeStoreList\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport Loader from './Loader'\r\nimport StoreListEntry from './StoreListEntry'\r\nimport MakeStoreList from './MakeStoreList'\r\n\r\nimport {FcCollapse, FcExpand} from 'react-icons/fc'\r\nimport {FaPlus, FaMinus} from 'react-icons/fa'\r\nimport SlideDown from 'react-slidedown'\r\n\r\nfunction StoreList() {\r\n\r\n  const { store, storeLoading } = useContext(GlobalContext)\r\n  const [displayedList, setDisplayedList] = useState([])\r\n  const [showMakeStoreList, setShowMakeStoreList] = useState(false)\r\n  const [showList, setShowList] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setDisplayedList([])\r\n    store.map((s) => {\r\n      const newListItem = (\r\n        <li key={s._id}>\r\n          <StoreListEntry\r\n            name={s.storeName}\r\n            sid={s._id}\r\n            description={s.description}\r\n          />\r\n        </li>\r\n      )\r\n      setDisplayedList((prev) => [...prev, newListItem])\r\n      return null\r\n    })\r\n  }, [store])\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        store list\r\n        <span onClick={() => setShowList(!showList)}>\r\n          {!showList ? <FcExpand className={'up-down-icon'}/> : <FcCollapse className={'up-down-icon'}/>}\r\n        </span>\r\n        {showList ? (\r\n          <span onClick={() => setShowMakeStoreList(!showMakeStoreList)}>\r\n            {showMakeStoreList ? <FaMinus className={'up-down-icon'}/> : <FaPlus className={'up-down-icon'}/>}\r\n          </span>\r\n        ) : null}\r\n      </h2>\r\n      <SlideDown>\r\n        {showMakeStoreList && showList ? <MakeStoreList /> : null}\r\n        {showList ? (\r\n          <ul className=\"list\">{storeLoading ? <Loader /> : displayedList}</ul>\r\n        ) : null}\r\n      </SlideDown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StoreList\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nimport { RiCloudLine } from 'react-icons/ri'\r\nimport {BsFillExclamationTriangleFill} from 'react-icons/bs'\r\n\r\nfunction SubmitButtons() {\r\n  const { groceryItem, addItemToHistory, deleteItemFromList } = useContext(\r\n    GlobalContext\r\n  )\r\n  const handleReset = () => {\r\n    groceryItem.forEach((item) => {\r\n      deleteItemFromList(item._id)\r\n    })\r\n  }\r\n  const handleSubmit = () => {\r\n    const checked = groceryItem.filter((item) => item.checked === true)\r\n    checked.map((item) => {\r\n      const histItem = {\r\n        groceryItemName: item.itemName,\r\n        storeName: item.defaultStore,\r\n        groceryItemDescription: item.description,\r\n        groceryItemAisle: item.aisle,\r\n      }\r\n      addItemToHistory(histItem)\r\n      deleteItemFromList(item._id)\r\n      return null\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={'submit-buttons'}>\r\n      <button onClick={handleSubmit} className={'myButton'}>\r\n        SUBMIT<RiCloudLine className={'up-down-icon'}/>\r\n      </button>\r\n      <button onClick={handleReset} className={'myButton'}>\r\n        RESET<BsFillExclamationTriangleFill className={'up-down-icon'}/>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n// SubmitButtons.whyDidYouRender = true\r\n\r\nexport default SubmitButtons\r\n","import React from 'react'\r\nimport './App.css'\r\n\r\nimport Header from './components/Header'\r\nimport GroceryList from './components/GroceryList'\r\nimport MakeGroceryList from './components/MakeGroceryList'\r\nimport StoreList from './components/StoreList'\r\nimport SubmitButtons from './components/SubmitButtons'\r\n\r\nimport { GlobalProvider } from './context/GlobalState'\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <SubmitButtons />\r\n        <GroceryList />\r\n        <MakeGroceryList />\r\n        <StoreList />\r\n      </div>\r\n    </GlobalProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import './wdyr'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}